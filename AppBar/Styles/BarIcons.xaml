<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:command="http://www.galasoft.ch/mvvmlight"
                    xmlns:conv="clr-namespace:AppBar.ValueConverters"
                    xmlns:local="clr-namespace:AppBar.Styles">

    <!-- Icon Sizes -->
        <Size x:Key="SmallIconSize" Width="16" Height="16"/>
        <sys:Double x:Key="SmallIconWidth">16</sys:Double>
        <sys:Double x:Key="SmallIconHeight">16</sys:Double>
    
        <Size x:Key="MediumIconSize" Width="24" Height="24"/>
        <sys:Double x:Key="MediumIconWidth">24</sys:Double>
        <sys:Double x:Key="MediumIconHeight">24</sys:Double>
    
        <Size x:Key="LargeIconSize" Width="32" Height="32"/>
        <sys:Double x:Key="LargeIconWidth">32</sys:Double>
        <sys:Double x:Key="LargeIconHeight">32</sys:Double>
    
        <Size x:Key="ExtraLargeIconSize" Width="40" Height="40"/>
        <sys:Double x:Key="ExtraLargeIconWidth">40</sys:Double>
        <sys:Double x:Key="ExtraLargeIconHeight">40</sys:Double>
    
    
    <!-- Common Icon Button Style Properties -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#80000000"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#80000000"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#40000000"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#40000000"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    
    
    
    <!-- Icon Button Style -->
    <Style x:Key="BarIconStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                        <Grid x:Name="Main" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="3"/>
                            </Grid.RowDefinitions>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LeftClick">
                                    <command:EventToCommand Command="{Binding LeftMouseButtonClickCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{Binding Name}"/>
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Border Grid.Row="0"                                     
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Padding="10,6"
                                    Margin="0">

                                <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Margin}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Border Grid.Row="1" Visibility="{Binding IsOpened,Converter={conv:BooleanToVisiblityConverter},Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                                <Border x:Name="bottomLine" Margin="4,0"  Background="{StaticResource AccentColorBrush}"/>
                            </Border>
                            <!-- Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrush}}"/> -->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource HighLightIconColorBrush}"/>
                            <Setter Property="Margin"
                                        TargetName="bottomLine"
                                        Value="0"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>